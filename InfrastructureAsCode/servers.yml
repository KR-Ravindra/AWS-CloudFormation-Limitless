Description: >
   High Availability Web Application deployed through CloudFormation
   by KR-Ravindra

Parameters:
    EnvironmentName:
        Description: An Environment name
        Type: String

Resources:
    LoadBalancerSecGroup:                                                    #LoadBalancer
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupDescription: Allow HTTP to the load balancer.
        VpcId:
          Fn::ImportValue:   
            !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress: 
          - IpProtocol: tcp
            FromPort: 80 
            ToPort: 80
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress: 
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 8080
            ToPort: 8080
            CidrIp: 0.0.0.0/0

    UdagramSecurityGroup:                                                    #SecurityGroups
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupDescription: Allow HTTP to our hosts.
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress: 
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress: 
          - IpProtocol: tcp
            FromPort: 0
            ToPort: 65535
            CidrIp: 0.0.0.0/0  

    UdagramLaunchConfig:                                                      #LaunchConfiguration
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install awscli -y
            apt-get install apache2 -y
            apt-get install unzip -y
            cd /var/www/html
            aws s3 cp s3://udagram01/udagram.zip .
            unzip -o udagram.zip
            #echo "Hey!,It works.. I am Udagram!" >> index.html
            systemctl start apache2.service

        ImageId: ami-0fc20dd1da406780b   #ubuntu @us-east-2
        SecurityGroups:
        - Ref: UdagramSecurityGroup
        InstanceType: t3.small    #suggestedByProblemStatement
        IamInstanceProfile:
          Fn::ImportValue:
            !Sub "${EnvironmentName}-IAM-NAME"
        BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'      #suggestedByProblemStatement

    UdagramGroup:                                                              #AutoScaling
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
        VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PRIV-NETS"
        LaunchConfigurationName:
          Ref: UdagramLaunchConfig
        MinSize: 4    #suggestedByProblemStatement
        MaxSize: 6
        TargetGroupARNs:
        - Ref: UdagramTargetGroup

    UdagramLoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
        SecurityGroups:
        - Ref: LoadBalancerSecGroup

    Listener:                                                                   
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: UdagramTargetGroup
        LoadBalancerArn:
          Ref: UdagramLoadBalancer
        Port: '80'
        Protocol: HTTP
    ALoadBalancerListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'UdagramTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1
    UdagramTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckIntervalSeconds: 10
        HealthCheckPath: /
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 8
        HealthyThresholdCount: 2
        Port: 80
        Protocol: HTTP
        UnhealthyThresholdCount: 5
        VpcId:
          Fn::ImportValue:
            Fn::Sub: "${EnvironmentName}-VPCID"

Outputs:                                                                     #Outputs
  UdagramLoadBalancerURL:
      Description: URL for WebApplication
      Value: !Join [ "", [ 'http://', !GetAtt UdagramLoadBalancer.DNSName ]]
      Export:                                                                 #DesiredbyProblemStatement
          Name: !Sub ${EnvironmentName}-LoadBalancer-URL